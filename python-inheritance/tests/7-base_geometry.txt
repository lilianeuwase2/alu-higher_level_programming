Test cases for BaseGeometry class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Test area method
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Test integer_validator with valid input
>>> bg.integer_validator("positive", 10)  # Should pass silently
>>> bg.integer_validator("positive", 1)   # Should pass silently

# Test integer_validator with non-integer types
>>> bg.integer_validator("string", "hello")
Traceback (most recent call last):
...
TypeError: string must be an integer

>>> bg.integer_validator("float", 5.5)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> bg.integer_validator("list", [1, 2, 3])
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> bg.integer_validator("none", None)
Traceback (most recent call last):
...
TypeError: none must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer

# Test integer_validator with zero and negative values
>>> bg.integer_validator("zero", 0)
Traceback (most recent call last):
...
ValueError: zero must be greater than 0

>>> bg.integer_validator("negative", -5)
Traceback (most recent call last):
...
ValueError: negative must be greater than 0
